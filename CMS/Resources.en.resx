<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutUs" xml:space="preserve">
    <value>About us</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="Certificate" xml:space="preserve">
    <value>Certificates</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CompanyAddress" xml:space="preserve">
    <value>Ruc Lien Hamlet, Thuy Son Commune, Thuy Nguyen District, Hai Phong City, Viet Nam</value>
  </data>
  <data name="CompanyEmail" xml:space="preserve">
    <value>info@namthuangroup.com</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Nam Thuan Company Limited</value>
  </data>
  <data name="CompanyPhoneNumber" xml:space="preserve">
    <value>+84 225 3642 408</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="ContactUs" xml:space="preserve">
    <value>Contact Us</value>
  </data>
  <data name="CorporateGovernance" xml:space="preserve">
    <value>Corporate governance</value>
  </data>
  <data name="CSR" xml:space="preserve">
    <value>CSR</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customers</value>
  </data>
  <data name="DesAboutUs" xml:space="preserve">
    <value>Nam Thuan Group is proud to be a garment company providing top quality services in the
region. The quality of the products and the working style have created the brand of Nam Thuan
Group with the spirit of constantly learning: &lt;q&gt;Always innovating, looking forward to the future&lt;/q&gt;.</value>
  </data>
  <data name="DesProductCategory" xml:space="preserve">
    <value>Diverse in designs and excellence in quality - Keep up with trends - Competitive price - Large production capacity</value>
  </data>
  <data name="Detail" xml:space="preserve">
    <value>Detail</value>
  </data>
  <data name="DevelopmentHistory" xml:space="preserve">
    <value>Development history</value>
  </data>
  <data name="DevelopmentStrategy" xml:space="preserve">
    <value>Development strategy</value>
  </data>
  <data name="DiversityAndQuality" xml:space="preserve">
    <value>Diversity &amp; Quality</value>
  </data>
  <data name="FeaturedProduct" xml:space="preserve">
    <value>Featured product</value>
  </data>
  <data name="FormCompanyName" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="FormMessage" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="FormName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="FormPhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="IntroduceAbout" xml:space="preserve">
    <value>Introduce About</value>
  </data>
  <data name="IntroHome2" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus blandit massa enim. Nullam id varius nunc. Vivamus bibendum magna ex, et faucibus lacus venenatis eget. Suspendisse potenti. Curabitur euismod facilisis neque, eu malesuada diam finibus non. Nullam nec vehicula leo. Morbi porta ante eu feugiat mollis.</value>
  </data>
  <data name="Lang" xml:space="preserve">
    <value>EN</value>
  </data>
  <data name="LinkPage" xml:space="preserve">
    <value>Page Links</value>
  </data>
  <data name="MenuAboutUs" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="MenuHome" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="MenuProduct" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="NamThuanGroup" xml:space="preserve">
    <value>Nam Thuan Group</value>
  </data>
  <data name="Or" xml:space="preserve">
    <value>Or</value>
  </data>
  <data name="OurPartner" xml:space="preserve">
    <value>Our Partner</value>
  </data>
  <data name="OurProduct" xml:space="preserve">
    <value>Our Product</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="PleaseContactUs" xml:space="preserve">
    <value>Please ContactUs</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="ProductCategories" xml:space="preserve">
    <value>Product Categories</value>
  </data>
  <data name="ProductionProcess" xml:space="preserve">
    <value>Production process</value>
  </data>
  <data name="ProductType" xml:space="preserve">
    <value>Product Type</value>
  </data>
  <data name="QualityControlProcess" xml:space="preserve">
    <value>Quality control process</value>
  </data>
  <data name="QuickContact" xml:space="preserve">
    <value>Quick Contact</value>
  </data>
  <data name="ReadMore" xml:space="preserve">
    <value>Read more</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Sending" xml:space="preserve">
    <value>Sending</value>
  </data>
  <data name="ShowAll" xml:space="preserve">
    <value>Show All</value>
  </data>
  <data name="Staff" xml:space="preserve">
    <value>Staff</value>
  </data>
  <data name="SubordinateUnits" xml:space="preserve">
    <value>Subordinate units</value>
  </data>
  <data name="YearOfExperience" xml:space="preserve">
    <value>Year Of Experience</value>
  </data>
</root>